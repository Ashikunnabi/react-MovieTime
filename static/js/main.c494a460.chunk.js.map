{"version":3,"sources":["components/Navbar.js","actions/searchActions.js","actions/types.js","components/Footer.js","components/CardWavesEffect.js","components/ReversedCascade.js","pages/Home.js","pages/Details.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js","API.js"],"names":["Navbar","state","isOpen","toggleCollapse","setState","onChangeSearchHandeller","e","props","searchMovie","target","value","onSubmitSearchHandeller","key","preventDefault","fetchMovie","text","moviesTitles","random","Math","floor","length","this","color","dark","expand","className","onClick","id","navbar","left","active","to","right","waves","type","placeholder","aria-label","onChange","onKeyPress","Component","connect","movies","dispatch","payload","axios","get","then","response","data","Search","catch","err","console","log","Footer","fluid","md","href","CardWavesEffect","style","height","display","hover","zoom","src","movie","Poster","Title","Year","Type","background","hrColor","imdbID","icon","size","singleMovie","useEffect","window","location","pathname","substring","lastIndexOf","reverse","cascade","margin","Genre","Released","Director","Writer","Actors","Plot","Metascore","imdbRating","imdbVotes","moviesList","map","DetailsPage","initialState","loading","searchReducer","action","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","path","exact","component","HomePage","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c494a460.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\n    MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n} from \"mdbreact\";\n\nimport {connect} from 'react-redux';\nimport {searchMovie, fetchMovie} from \"../actions/searchActions\";\n\nclass Navbar extends Component {\n    state = {\n        isOpen: false,\n    };\n\n    toggleCollapse = () => {\n        this.setState({isOpen: !this.state.isOpen});\n    };\n\n    onChangeSearchHandeller = e => {\n        this.props.searchMovie(e.target.value);\n    };\n\n    onSubmitSearchHandeller = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.props.fetchMovie(this.props.text);\n        }\n    };\n\n    componentDidMount() {\n        const moviesTitles = [\"student\", \"Ant\", \"joker\", \"year\", \"dream\", \"fare\", \"kill\"];\n        const random = Math.floor(Math.random() * moviesTitles.length);\n        this.props.fetchMovie(moviesTitles[random]);\n    }\n\n    render() {\n        return (\n            <MDBNavbar color=\"indigo\" dark expand=\"md\">\n                <MDBNavbarBrand>\n                    <strong className=\"white-text\">MovieTime</strong>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick={this.toggleCollapse}/>\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n                    <MDBNavbarNav left>\n                        <MDBNavItem active>\n                            <MDBNavLink to=\"/\">Home</MDBNavLink>\n                        </MDBNavItem>\n                    </MDBNavbarNav>\n                    <MDBNavbarNav right>\n                        <MDBNavItem>\n                            <MDBFormInline waves>\n                                <div className=\"md-form my-0\">\n                                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\"\n                                           aria-label=\"Search\" onChange={this.onChangeSearchHandeller}\n                                           onKeyPress={this.onSubmitSearchHandeller}/>\n                                </div>\n                            </MDBFormInline>\n                        </MDBNavItem>\n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    text: state.movies.text\n});\n\nconst mapDispatchToProps = dispatch => ({\n    searchMovie: (e) => {\n        dispatch(searchMovie(e))\n    },\n    fetchMovie: (e) => {\n        dispatch(fetchMovie(e))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import {SEARCH_MOVIE, FETCH_MOVIE, SINGLE_MOVIE} from \"./types\";\nimport axios from 'axios';\n\nimport {key} from '../API'\n\nexport const searchMovie = text => dispatch => {\n    dispatch({\n        type: SEARCH_MOVIE,\n        payload: text\n    })\n};\n\nexport const fetchMovie = text => dispatch => {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://www.omdbapi.com/?apikey=${key}&s=${text}`)\n        .then(response =>\n            dispatch({\n                type: FETCH_MOVIE,\n                payload: response.data.Search\n            })\n        )\n        .catch(err => console.log(err))\n};\n\nexport const singleMovie = id => dispatch => {\n    axios.get(`https://cors-anywhere.herokuapp.com/https://www.omdbapi.com/?apikey=${key}&i=${id}`)\n        .then(response =>\n            dispatch({\n                type: SINGLE_MOVIE,\n                payload: response.data\n            })\n        )\n        .catch(err => console.log(err))\n};\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const SINGLE_MOVIE = 'SINGLE_MOVIE';\n","import React from \"react\";\nimport {MDBCol, MDBContainer, MDBRow, MDBFooter} from \"mdbreact\";\n\nconst Footer = () => {\n    return (\n        <MDBFooter color=\"indigo\" className=\"font-small pt-4 mt-4\">\n            <MDBContainer fluid className=\"text-center text-md-left\">\n                <MDBRow>\n                    <MDBCol md=\"6\">\n                        <h5 className=\"title\">Footer Content</h5>\n                        <p>\n                            This MovieTime is a simple React Redux project which is using {' '}\n                            <a href='http://www.omdbapi.com/'>OMDB</a> {' '}\n                            as api provider.\n                        </p>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            <div className=\"footer-copyright text-center py-3\">\n                {/*<MDBContainer fluid>*/}\n                {/*  &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>*/}\n                {/*</MDBContainer>*/}\n                <MDBContainer fluid>\n                    Developed by: <a href=\"https://www.github.com/Ashikunnabi\"> Md. Ashikun Nabi </a>\n                </MDBContainer>\n            </div>\n        </MDBFooter>\n    );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardImage,\n    MDBCardTitle,\n    MDBCardText,\n    MDBCol,\n    MDBIcon,\n    MDBLink\n} from 'mdbreact';\n\nconst CardWavesEffect = (props) => {\n    return (\n        <MDBCol md='3' className=\"my-2\" style={{height: '500px', display: 'flex'}}>\n            <MDBCard className=\"hoverable\">\n                <MDBCardImage hover zoom className=\"img-fluid\"\n                              // src=\"https://mdbootstrap.com/img/Mockups/Lightbox/Thumbnail/img%20(67).jpg\"\n                              src={props.movie.Poster}\n                              waves/>\n                <MDBCardBody>\n                    <MDBCardTitle>{props.movie.Title}</MDBCardTitle>\n                    {/*<MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's*/}\n                    {/*    content.</MDBCardText>*/}\n                    {/*<MDBBtn href=\"#\">More Details</MDBBtn>*/}\n                    <span className=\"badge badge-default\">{props.movie.Year}</span> {' '}\n                    <span className=\"badge badge-success\">{props.movie.Type}</span>\n                    <hr style={{background: props.hrColor}}/>\n                    <MDBLink to={'/movie/' + props.movie.imdbID} className='orange-text mt-1 d-flex justify-content-end align-items-center'>\n                        <h5 className=''>\n                            See details{''}\n                            <MDBIcon icon='angle-double-right' className='ml-2' size='sm'></MDBIcon>\n                        </h5>\n                    </MDBLink>\n                </MDBCardBody>\n            </MDBCard>\n        </MDBCol>\n    )\n}\n\nexport default CardWavesEffect;\n","import React, {useEffect} from 'react';\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBIcon } from 'mdbreact';\nimport {singleMovie} from \"../actions/searchActions\";\nimport {connect} from \"react-redux\";\n\n\nconst ReversedCascade = (props) => {\n  useEffect(() => {\n    props.singleMovie(window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1))\n  }, []);\n\n  return (\n    <MDBRow>\n      <MDBCol md='12'>\n        <MDBCard reverse>\n          <MDBCardImage cascade style={{ height: '80%', margin: '0 auto'}} src={props.movie.Poster} />\n          <MDBCardBody cascade className=\"text-center\">\n            <MDBCardTitle>{props.movie.Title}</MDBCardTitle>\n            <h5 className=\"indigo-text\"><strong>{props.movie.Genre} - {props.movie.Type}, Released at: {props.movie.Released}</strong></h5>\n            <h5 className=\"standered-text\"><strong>Directed By: {props.movie.Director}, Writer: {props.movie.Writer}</strong></h5>\n            <h5 className=\"default-text\"><strong>Actors: {props.movie.Actors}</strong></h5>\n            <MDBCardText>{props.movie.Plot}</MDBCardText>\n            <a href=\"#!\" className=\"icons-sm li-ic ml-1\">\n              Meta Score:{props.movie.Metascore}</a>,\n            <a href=\"#!\" className=\"icons-sm tw-ic ml-1\">\n              IMDB Rating: {props.movie.imdbRating}</a>,\n            <a href=\"#!\" className=\"icons-sm fb-ic ml-1\">\n              IMDB Voats: {props.movie.imdbVotes}</a>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n  )\n};\n\nconst mapStateToProps = state => ({\n  movie: state.movies.movie\n});\n\nconst mapDispatchToProps = dispatch => ({\n    singleMovie: (e) => {dispatch(singleMovie(e))}\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReversedCascade);\n","import React from 'react';\nimport {MDBRow} from 'mdbreact';\nimport {connect} from 'react-redux';\n\nimport {CardWavesEffect} from \"../components\";\n\nfunction HomePage(props) {\n    const movies = props.moviesList.map((movie, id) => <CardWavesEffect movie={movie} key={id}/>);\n    return (\n        <div className=\"container\">\n            <MDBRow>\n                {movies}\n            </MDBRow>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    moviesList: state.movies.movies\n});\nexport default connect(mapStateToProps)(HomePage);\n","import React from 'react';\nimport {MDBRow} from 'mdbreact';\nimport {ReversedCascade} from \"../components\";\n\n\nfunction DetailsPage() {\n    return (\n        <div className=\"container\">\n            <ReversedCascade/>\n        </div>\n    );\n}\n\nexport default DetailsPage;\n","import {SEARCH_MOVIE, FETCH_MOVIE, SINGLE_MOVIE} from \"../actions/types\";\n\nconst initialState = {\n    text: '',\n    movies: [],\n    loading: false,\n    movie: []\n};\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEARCH_MOVIE:\n            return {\n                ...state,\n                text: action.payload,\n                loading: false\n            };\n        case FETCH_MOVIE:\n            return {\n                ...state,\n                movies: action.payload\n            };\n        case SINGLE_MOVIE:\n            return {\n                ...state,\n                movie: action.payload\n            };\n        default:\n            return state\n    }\n};\n\nexport default searchReducer;\n","import {combineReducers} from 'redux';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({\n    movies: searchReducer\n});\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\nimport {fetchMovie} from './actions/searchActions'\n\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\n\nexport default store;\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport {Navbar, Footer} from \"./components\";\nimport HomePage from \"./pages/Home\";\nimport DetailsPage from \"./pages/Details\";\n\nimport store from './store'\n\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar/>\n                    <br/>\n                    <Switch>\n                        <Route path='react-MovieTime/' exact component={HomePage}/>\n                        <Route path='react-MovieTime/movie/:id' exact component={DetailsPage}/>\n                    </Switch>\n                    <Footer/>\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// mdbreact libraries\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    'key': 'bbf598ef'\n};\n"],"sourceRoot":""}